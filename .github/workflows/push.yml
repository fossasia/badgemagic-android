name: Badge Magic Push CI
on:
  push:
    branches: ["flutter_app"]
jobs:
  common:
    runs-on: ubuntu-latest

    outputs:
      VERSION_NAME: ${{ steps.flutter-version.outputs.VERSION_NAME }}
      VERSION_CODE: ${{ steps.flutter-version.outputs.VERSION_CODE }}

    steps:
      - uses: actions/checkout@v4

      - name: Common Workflow
        uses: ./.github/actions/common

      - name: Hydrate and Update Version
        id: flutter-version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git clone --branch=version https://${{ github.repository_owner }}:${{ github.token }}@github.com/${{ github.repository }} version
          cd version

          # Read and increment version name
          IFS='.' read -r major minor patch < versionName.txt
          current_patch_version_name="$major.$minor.$patch"
          echo "VERSION_NAME=$current_patch_version_name" >> $GITHUB_OUTPUT
          
          next_patch=$((patch + 1))
          next_patch_version_name="$major.$minor.$next_patch"
          echo "$next_patch_version_name" > versionName.txt

          # Read and increment version code
          read -r version_code < versionCode.txt
          echo "VERSION_CODE=$version_code" >> $GITHUB_OUTPUT
          
          new_version_code=$((version_code + 1))
          echo "$new_version_code" > versionCode.txt

          # Force push to version branch
          git checkout --orphan temporary
          git add --all .
          git commit -am "[Auto] Update versionName: $next_patch_version_name & versionCode: $new_version_code ($(date +%Y-%m-%d.%H:%M:%S))"
          git branch -D version
          git branch -m version
          git push --force origin version
  

  android:
    name: Android Flutter Build
    needs: common
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Pre Checks
        run: |
          bash scripts/check-screenshots.sh

      - name: Prepare Build Keys
        if: ${{ github.repository == 'fossasia/badgemagic-android' }}
        env:
          ENCRYPTED_F10B5E0E5262_IV: ${{ secrets.ENCRYPTED_F10B5E0E5262_IV }}
          ENCRYPTED_F10B5E0E5262_KEY: ${{ secrets.ENCRYPTED_F10B5E0E5262_KEY }}
        run: |
          bash scripts/prep-key.sh
  
      - name: Android Workflow
        uses: ./.github/actions/android
        with:
          STORE_PASS: ${{ secrets.STORE_PASS }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASS }}
          VERSION_NAME: ${{needs.common.outputs.VERSION_NAME}}
          VERSION_CODE: ${{needs.common.outputs.VERSION_CODE}}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: APK Generated
          path: build/app/outputs/flutter-apk
  
      - name: Upload AAB Release
        uses: actions/upload-artifact@v4
        with:
          name: AAB Generated
          path: build/app/outputs/bundle
      
      - name: Upload APK/AAB to apk branch
        if: ${{ github.repository == 'fossasia/badgemagic-android' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git clone --branch=apk https://${{ github.repository_owner }}:${{ github.token }}@github.com/${{ github.repository }} apk
          cd apk
          
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}

          echo "Removing previous files from branch"

          rm -rf badge-magic-$branch*

          ls

          echo "Copying new build files"

          find ../build/app/outputs/flutter-apk -type f \( -name '*.apk' -o -name '*.aab' \) -exec cp -v {} . \;
          find ../build/app/outputs/bundle -type f \( -name '*.apk' -o -name '*.aab' \) -exec cp -v {} . \;

          ls

          echo "Renaming new build files"

          for file in app*; do
            mv $file badge-magic-$branch-${file#*-}
          done

          ls

          echo "Pushing to apk branch"

          git checkout --orphan temporary
          git add --all .
          git commit -am "[Auto] Update APK/AAB's from $branch ($(date +%Y-%m-%d.%H:%M:%S))"
          git branch -D apk
          git branch -m apk
          git push --force origin apk

      - name: Setup Ruby
        if: ${{ github.repository == 'fossasia/badgemagic-android' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Prepare Bundler
        if: ${{ github.repository == 'fossasia/badgemagic-android' }}
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      
      - name: Update app in Open Testing track
        if: ${{ github.repository == 'fossasia/badgemagic-android' }}
        run: |
          bundle exec fastlane uploadToOpenTesting
          if [[ $? -ne 0 ]]; then
              exit 1
          fi

  ios:
    name: iOS Flutter Build
    needs: common
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: iOS Workflow
        uses: ./.github/actions/ios
        with:
          VERSION_NAME: ${{needs.common.outputs.VERSION_NAME}}
          VERSION_CODE: ${{needs.common.outputs.VERSION_CODE}}
  
  update-release:
    needs: [common, android, ios]
    runs-on: ubuntu-latest
    steps:
      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.common.outputs.VERSION_NAME }}
    